1. we need a unique identifier for users.

We can keep using the username as the UUID. If we do this
I think it would also be a good idea to add a name/lastname
field to the login.

we can also use pythons built in UUID library, this will generate
a unique id for each customer and then we can use name and multiple users
can have the same names.



2. reformatted customer __init__ method,

was running into issues for getting the customer object when logging in.
So i changed the params to go into the register method, I don't think we'll
need to directly access them from the class later as we can get the information
from the node. I think so far the only important information we need from the
class is the username for the login feature.

If we decide to use UUID in the future, then that we need to remember to change
the self.username = username to self.id = id.

3. The add friend method works.

for testing purposes I have the current user add a predefined friend with the
username bob in my test DB.

Im still working on how to get the correct from information from the
otherprofile page.

Im not 100% sure how sessions work so I will have to look into that. Right now
when adding a friend im using the currently logged in user to create a
relationship(ie: current user = session['user']). not sure if this expires if a
new page is loaded etc


3. I deleted the original register.html

renamed signUP.html to register.html to keep things consistent with the python
code.
